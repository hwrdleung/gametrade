{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.css","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/data.service.ts","./src/app/games-data.service.ts","./src/app/home/home.component.css","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/my-games/my-games.component.css","./src/app/my-games/my-games.component.html","./src/app/my-games/my-games.component.ts","./src/app/my-trades/my-trades.component.css","./src/app/my-trades/my-trades.component.html","./src/app/my-trades/my-trades.component.ts","./src/app/profile/profile.component.css","./src/app/profile/profile.component.html","./src/app/profile/profile.component.ts","./src/app/register/register.component.css","./src/app/register/register.component.html","./src/app/register/register.component.ts","./src/app/trade.service.ts","./src/app/validators/emailMatch.validator.ts","./src/app/validators/passwordMatch.validator.ts","./src/app/validators/passwordRequirements.validator.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \".nav-bar {\\r\\n    height: auto;\\r\\n    width: 100%;\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: justify;\\r\\n        -ms-flex-pack: justify;\\r\\n            justify-content: space-between;\\r\\n    -webkit-box-align: center;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    z-index: 50;\\r\\n}\\r\\n\\r\\n.nav-bar ul a {\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\n.nav-bar ul a:hover {\\r\\n    color: #FFF;\\r\\n}\\r\\n\\r\\n.nav-bar ul {\\r\\n    list-style-type: none;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.nav-bar ul li {\\r\\n    display: inline-block;\\r\\n}\\r\\n\\r\\n.nav-bar ul li a {\\r\\n    display: block;\\r\\n    padding: 15px 20px;\\r\\n}\\r\\n\\r\\n.nav-bar ul li a:hover {\\r\\n    background: green;\\r\\n}\\r\\n\\r\\n#nav-links-mobile {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.mobile-menu-btn {\\r\\n    display: none;\\r\\n    z-index: 20;\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 700px) {\\r\\n    .mobile-menu-btn {\\r\\n        display: block;\\r\\n        height: 50px;\\r\\n        width: 50px;\\r\\n        background: none;\\r\\n        display: -webkit-box;\\r\\n        display: -ms-flexbox;\\r\\n        display: flex;\\r\\n        -webkit-box-pack: center;\\r\\n            -ms-flex-pack: center;\\r\\n                justify-content: center;\\r\\n        -webkit-box-align: center;\\r\\n            -ms-flex-align: center;\\r\\n                align-items: center;\\r\\n    }\\r\\n\\r\\n    #nav-links {\\r\\n        display: none;\\r\\n    }\\r\\n\\r\\n    #nav-links-mobile {\\r\\n        display: -webkit-box;\\r\\n        display: -ms-flexbox;\\r\\n        display: flex;\\r\\n        -webkit-box-orient: vertical;\\r\\n        -webkit-box-direction: normal;\\r\\n            -ms-flex-direction: column;\\r\\n                flex-direction: column;\\r\\n        position: fixed;\\r\\n        right: 0;\\r\\n        -webkit-transition: top 0.2s;\\r\\n        transition: top 0.2s;\\r\\n        z-index: 2;\\r\\n        list-style-type: none;\\r\\n        margin: 0;\\r\\n    }\\r\\n\\r\\n    #nav-links-mobile li a {\\r\\n        display: block;\\r\\n        text-decoration: none;\\r\\n        padding: 20px 25px;\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"\\r\\n<!-- NAV BAR -->\\r\\n<nav *ngIf=\\\"this.dataService.currentUser\\\" class=\\\"nav-bar theme\\\">\\r\\n        <a id=\\\"logo\\\" routerLink=\\\"/\\\">GameTrader</a>\\r\\n        <div class=\\\"mobile-menu-btn\\\" [style.background]=\\\"showMobileMenu? 'green' : 'none'\\\"><a (click)=\\\"toggleMobileMenu()\\\"><i class=\\\"fa fa-bars\\\"></i></a></div>\\r\\n    <ul id=\\\"nav-links\\\">\\r\\n        <li>\\r\\n            <a routerLink=\\\"/myGames\\\">My Games</a>\\r\\n        </li>\\r\\n        <li>\\r\\n            <a routerLink=\\\"/myTrades\\\">My Trades</a>\\r\\n        </li>\\r\\n        <li>\\r\\n            <a routerLink=\\\"/dashboard\\\">{{this.dataService.userData.username}}</a>\\r\\n        </li>\\r\\n        <li>\\r\\n            <a (click)=\\\"this.dataService.logout()\\\">Sign Out</a>\\r\\n        </li>\\r\\n    </ul>\\r\\n</nav>\\r\\n\\r\\n<ul class=\\\"theme\\\" id=\\\"nav-links-mobile\\\" [style.top]=\\\"showMobileMenu? '50px' : '-250px'\\\">\\r\\n    <li>\\r\\n        <a routerLink=\\\"/myGames\\\" (click)=\\\"toggleMobileMenu()\\\">My Games</a>\\r\\n    </li>\\r\\n    <li>\\r\\n        <a routerLink=\\\"/myTrades\\\" (click)=\\\"toggleMobileMenu()\\\">My Trades</a>\\r\\n    </li>\\r\\n    <li>\\r\\n        <a routerLink=\\\"/dashboard\\\" (click)=\\\"toggleMobileMenu()\\\">{{this.dataService.userData.username}}</a>\\r\\n    </li>\\r\\n    <li>\\r\\n        <a (click)=\\\"this.dataService.logout()\\\">Sign Out</a>\\r\\n    </li>\\r\\n</ul>\\r\\n\\r\\n\\r\\n\\r\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from './data.service';\r\nimport { GamesDataService } from './games-data.service';\r\nimport { TradeService } from './trade.service';\r\nimport * as JWT from 'jwt-decode';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'app';\r\n\r\n  showMobileMenu = false;\r\n\r\n  constructor(private tradeService:TradeService, private dataService:DataService, private gamesDataService:GamesDataService) { }\r\n\r\nngOnInit(){\r\n  this.dataService.userData = JWT(sessionStorage.getItem('currentUser')).user;\r\n}\r\n\r\nngOnDestroy(){\r\n  this.gamesDataService.searchResults = [];\r\n}\r\n\r\ntoggleMobileMenu (){\r\n  this.showMobileMenu = !this.showMobileMenu;\r\n  console.log(this.showMobileMenu);\r\n}\r\n\r\n  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { MyGamesComponent } from './my-games/my-games.component';\r\nimport { MyTradesComponent } from './my-trades/my-trades.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { DataService } from './data.service';\r\nimport { GamesDataService } from './games-data.service';\r\nimport { TradeService }  from './trade.service';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'dashboard', component: DashboardComponent },\r\n  { path: 'myGames', component: MyGamesComponent },\r\n  { path: 'myTrades', component: MyTradesComponent },\r\n  { path: 'profile/:username', component: ProfileComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    MyGamesComponent,\r\n    MyTradesComponent,\r\n    ProfileComponent,\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot(\r\n      appRoutes,\r\n      { enableTracing: false } // <-- debugging purposes only\r\n    )\r\n  ],\r\n  providers: [DataService, GamesDataService, TradeService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \".settings-box {\\r\\n    list-style-type: none;\\r\\n    color: #FFF;\\r\\n    padding: 40px;\\r\\n    margin: 20px auto;\\r\\n    max-width: 700px;\\r\\n}\\r\\n\\r\\n.settings-box ul{\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.settings-box li{\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: horizontal;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: row;\\r\\n            flex-direction: row;\\r\\n    -webkit-box-pack: justify;\\r\\n        -ms-flex-pack: justify;\\r\\n            justify-content: space-between;\\r\\n    -webkit-box-align: start;\\r\\n        -ms-flex-align: start;\\r\\n            align-items: flex-start;\\r\\n    padding: 10px 0;\\r\\n}\\r\\n\\r\\n.settings-box li >*:last-child {\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n.settings-box h2{\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n.settings-box textarea {\\r\\n    width: 600px;\\r\\n    height: 150px;\\r\\n}\\r\\n\\r\\n.picture-selector {\\r\\n    width: 600px;\\r\\n    height: 100px;\\r\\n    position: fixed;\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -ms-flex-wrap: wrap;\\r\\n        flex-wrap: wrap;\\r\\n    -webkit-box-orient: horizontal;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: row;\\r\\n            flex-direction: row;\\r\\n    -webkit-box-pack: start;\\r\\n        -ms-flex-pack: start;\\r\\n            justify-content: flex-start;\\r\\n    -webkit-box-align: start;\\r\\n        -ms-flex-align: start;\\r\\n            align-items: flex-start;\\r\\n    padding: 20px;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    margin-top: -50px;\\r\\n    margin-left: -300px;\\r\\n    background: #000;\\r\\n    z-index: 20;\\r\\n}\\r\\n\\r\\n.picture-selector img {\\r\\n    height: 100px;\\r\\n    width: 100px;\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 600px){\\r\\n\\r\\n    .settings-box {\\r\\n        padding: 15px;\\r\\n    }\\r\\n\\r\\n    .settings-box textarea{\\r\\n        width: 250px;\\r\\n    }\\r\\n\\r\\n    .picture-selector {\\r\\n        width: 100vw;\\r\\n        height: auto;\\r\\n        -webkit-box-pack: center;\\r\\n            -ms-flex-pack: center;\\r\\n                justify-content: center;\\r\\n        -webkit-box-align: center;\\r\\n            -ms-flex-align: center;\\r\\n                align-items: center;\\r\\n        top: 40%;\\r\\n        left: 0;\\r\\n        margin-top: 0;\\r\\n        margin-left: 0;\\r\\n        padding: 10px 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 350px) {\\r\\n    .settings-box {\\r\\n\\r\\n        font-size: 0.8rem;\\r\\n\\r\\n    }\\r\\n}\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.css\n// module id = ./src/app/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<ul class=\\\"tab-menu-mobile\\\">\\r\\n  <li>\\r\\n    <a id=\\\"profile-tab\\\" (click)=\\\"displayContent('Edit Profile')\\\">Edit Profile</a>\\r\\n  </li>\\r\\n  <li>\\r\\n    <a id=\\\"account-tab\\\" (click)=\\\"displayContent('Account Settings')\\\">Account Settings</a>\\r\\n  </li>\\r\\n</ul>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n\\r\\n  <div class=\\\"container\\\">\\r\\n\\r\\n    <ul class=\\\"tab-menu\\\">\\r\\n      <li>\\r\\n        <a id=\\\"profile-tab\\\" (click)=\\\"displayContent('Edit Profile')\\\">Edit Profile</a>\\r\\n      </li>\\r\\n      <li>\\r\\n        <a id=\\\"account-tab\\\" (click)=\\\"displayContent('Account Settings')\\\">Account Settings</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n\\r\\n    <div *ngIf=\\\"displayEditProfileTab\\\" class=\\\"tab-content\\\">\\r\\n      <h3>Edit Profile</h3>\\r\\n\\r\\n      <form class=\\\"theme settings-box\\\" [formGroup]=\\\"editProfileForm\\\" (ngSubmit)=\\\"this.dataService.editProfile(editProfileForm.value); resetView()\\\">\\r\\n        <ul>\\r\\n          <li>\\r\\n            <img class=\\\"profile-img\\\" [src]=\\\"selectedImg\\\">\\r\\n            <div *ngIf=\\\"displayPictureSelector\\\" class=\\\"theme picture-selector\\\">\\r\\n              <div *ngFor=\\\"let picture of this.dataService.profilePics; let i = index\\\">\\r\\n                <a (click)=\\\"setPicture(i); togglePictureSelector()\\\"><img src=\\\"{{picture}}\\\"></a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </li>\\r\\n          <li>\\r\\n            <a (click)=\\\"togglePictureSelector()\\\">Change Profile Picture</a>\\r\\n            <a routerLink=\\\"/profile/{{this.dataService.userData.username}}\\\">View Public Profile</a>\\r\\n          </li>\\r\\n          <li>\\r\\n            <p>Display name publicly:</p>\\r\\n            <select formControlName=\\\"displayName\\\" name=\\\"displayName\\\">\\r\\n              <option value=\\\"Enable\\\">Enable</option>\\r\\n              <option value=\\\"Disable\\\">Disable</option>\\r\\n            </select>\\r\\n          </li>\\r\\n          <li>\\r\\n            <p>Display email address publicly:</p>\\r\\n            <select formControlName=\\\"displayEmail\\\" name=\\\"displayEmail\\\">\\r\\n              <option value=\\\"Enable\\\">Enable</option>\\r\\n              <option value=\\\"Disable\\\">Disable</option>\\r\\n            </select>\\r\\n          </li>\\r\\n          <li>\\r\\n          </li>\\r\\n          <li *ngIf=\\\"!editBioMode; else edit\\\">\\r\\n            <div>\\r\\n              <p>Bio:</p>\\r\\n              <p>{{this.dataService.userData.profile.bio}}</p>\\r\\n              </div>\\r\\n            <a (click)=\\\"toggleEditBioMode()\\\">Edit Bio</a>\\r\\n          </li>\\r\\n          <ng-template #edit>\\r\\n            <li>\\r\\n                <div>\\r\\n                    <p>Bio:</p>\\r\\n              <textarea formControlName=\\\"bio\\\" name=\\\"bio\\\">\\r\\n              {{this.dataService.userData.profile.bio}}\\r\\n            </textarea>\\r\\n            </div>\\r\\n            <a (click)=\\\"toggleEditBioMode()\\\">Cancel</a>\\r\\n\\r\\n            </li>\\r\\n          </ng-template>\\r\\n        </ul>\\r\\n        <input type=\\\"submit\\\" value=\\\"Save Changes\\\">\\r\\n\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"displayAccountSettingsTab\\\" class=\\\"tab-content\\\">\\r\\n        <h3>Account Settings</h3>\\r\\n\\r\\n      <ul class=\\\"theme settings-box\\\">\\r\\n\\r\\n        <li>\\r\\n          <h2>{{ this.dataService.userData.first }} {{ this.dataService.userData.last }}</h2>\\r\\n        </li>\\r\\n\\r\\n        <li>\\r\\n          <p>Location: {{ this.dataService.userData.city }}, {{ this.dataService.userData.state }}, {{ this.dataService.userData.country\\r\\n            }}\\r\\n          </p>\\r\\n          <a (click)=\\\"displayForm('location')\\\">Change Location</a>\\r\\n        </li>\\r\\n\\r\\n        <li>\\r\\n          <p>Email Address: {{ this.dataService.userData.email }}</p>\\r\\n          <a (click)=\\\"displayForm('email')\\\">Change Email Address</a>\\r\\n        </li>\\r\\n\\r\\n        <li>\\r\\n          <p>Password: ********</p>\\r\\n          <a (click)=\\\"displayForm('password')\\\">Change Password</a>\\r\\n        </li>\\r\\n\\r\\n        <li>\\r\\n          <p>Delete Account</p>\\r\\n          <a (click)=\\\"displayForm('delete account')\\\">Delete Account</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <div>\\r\\n        <form class=\\\"theme settings-box\\\" *ngIf=\\\"displayChangeLocationForm\\\" [formGroup]=\\\"changeLocationForm\\\" (ngSubmit)=\\\"this.dataService.changeLocation(changeLocationForm.value); hideAllForms()\\\">\\r\\n          <h3>Update Your Location</h3>\\r\\n\\r\\n          <label>City:\\r\\n            <input type=\\\"text\\\" formControlName=\\\"newCity\\\" name=\\\"newCity\\\">\\r\\n          </label>\\r\\n\\r\\n          <label>State:\\r\\n            <input type=\\\"text\\\" formControlName=\\\"newState\\\" name=\\\"newState\\\">\\r\\n          </label>\\r\\n\\r\\n          <label>Country:\\r\\n            <input type=\\\"text\\\" formControlName=\\\"newCountry\\\" name=\\\"newCountry\\\">\\r\\n          </label>\\r\\n\\r\\n          <input type=\\\"submit\\\" [disabled]=\\\"!changeLocationForm.valid\\\">\\r\\n        </form>\\r\\n\\r\\n        <form class=\\\"theme settings-box\\\" *ngIf=\\\"displayChangeEmailForm\\\" [formGroup]=\\\"changeEmailForm\\\" (ngSubmit)=\\\"this.dataService.changeEmail(changeEmailForm.value)\\\">\\r\\n          <h3>Update your email address</h3>\\r\\n\\r\\n          <label>\\r\\n            Enter your new email address:\\r\\n            <input type=\\\"email\\\" formControlName=\\\"email\\\" name=\\\"email\\\">\\r\\n            <div class=\\\"form-alert\\\" *ngIf=\\\"!changeEmailForm.controls['email'].valid && changeEmailForm.controls['email'].touched\\\">You must enter a valid email address.</div>\\r\\n          </label>\\r\\n\\r\\n          <label>\\r\\n            Re-type your new email address:\\r\\n            <input type=\\\"email\\\" formControlName=\\\"email2\\\" name=\\\"email2\\\">\\r\\n            <div class=\\\"form-alert\\\" *ngIf=\\\"changeEmailForm.get('email2').hasError('required') && changeEmailForm.controls['email2'].touched\\\">You must re-type your email address.</div>\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"changeEmailForm.controls.email2.errors?.emailMismatch\\\">The email addresses you entered do not match.</div>\\r\\n          </label>\\r\\n\\r\\n          <input type=\\\"submit\\\" [disabled]=\\\"!changeEmailForm.valid\\\">\\r\\n\\r\\n        </form>\\r\\n\\r\\n        <form class=\\\"theme settings-box\\\" *ngIf=\\\"displayChangePasswordForm\\\" [formGroup]=\\\"changePasswordForm\\\" (ngSubmit)=\\\"this.dataService.changePassword(changePasswordForm.value)\\\">\\r\\n          <h3>Change your password</h3>\\r\\n\\r\\n          <label>\\r\\n            Enter your current password:\\r\\n            <input type=\\\"password\\\" formControlName=\\\"oldPassword\\\" name=\\\"oldPassword\\\">\\r\\n            <div class=\\\"form-alert\\\" *ngIf=\\\"changePasswordForm.controls.password.errors?.required && changePasswordForm.controls['password'].touched\\\">You must enter your current password.</div>\\r\\n          </label>\\r\\n\\r\\n          <label>\\r\\n            Enter your new password:\\r\\n            <input type=\\\"password\\\" formControlName=\\\"password\\\" name=\\\"password\\\">\\r\\n            <div class=\\\"form-alert\\\" *ngIf=\\\"changePasswordForm.controls.password.errors?.required && changePasswordForm.controls['password'].touched\\\">Password is required.</div>\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"changePasswordForm.controls.password.errors?.noSpecialChar\\\">Your password must have at least one of the following special characters: !@#$%^&*</div>\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"changePasswordForm.controls.password.errors?.allUpperCase\\\">Your password must have at least one lowercase letter.</div>\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"changePasswordForm.controls.password.errors?.allLowercase\\\">Your password must have at least one uppercase letter.</div>\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"changePasswordForm.controls.password.errors?.noNumber\\\">Your password must have at least one number.</div>\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"changePasswordForm.controls.password.errors?.minlength\\\">Your password must be at least 8 characters.</div>\\r\\n          </label>\\r\\n\\r\\n          <label>\\r\\n            Re-type your new password:\\r\\n            <input type=\\\"password\\\" formControlName=\\\"password2\\\" name=\\\"password2\\\">\\r\\n            <div class=\\\"form-alert\\\" *ngIf=\\\"changePasswordForm.get('password2').hasError('required') && changePasswordForm.controls['password2'].touched\\\">You must re-type your password.</div>\\r\\n            <div class=\\\"form-alert\\\" *ngIf=\\\"changePasswordForm.controls.password2.errors?.passwordMismatch\\\">The passwords you entered do not match.</div>\\r\\n      \\r\\n          </label>\\r\\n\\r\\n          <input type=\\\"submit\\\" [disabled]=\\\"!changePasswordForm.valid\\\">\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n      <form class=\\\"theme settings-box\\\" *ngIf=\\\"displayDeleteAccountForm\\\" [formGroup]=\\\"deleteAccountForm\\\" (ngSubmit)=\\\"this.dataService.deleteAccount(deleteAccountForm.value)\\\">\\r\\n        <h3>Delete your account</h3>\\r\\n        <br>\\r\\n        <p>Warning:</p>\\r\\n        <p>You are about to delete your account.</p>\\r\\n        <p>This is irreversible and all of your data will be lost.</p>\\r\\n        <p>To proceed,\\r\\n          please enter your password.</p>\\r\\n        <input type=\\\"password\\\" formControlName=\\\"password\\\" name=\\\"password\\\">\\r\\n        <input type=\\\"submit\\\" [disabled]=\\\"!deleteAccountForm.valid\\\">\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"displayTradeRequests\\\" class=\\\"tab-content\\\">\\r\\n      <h3>Trade Requests</h3>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"displayTradeHistory\\\" class=\\\"tab-content\\\">\\r\\n      <h3>Trade History</h3>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"displayActiveTrades\\\" class=\\\"tab-content\\\">\\r\\n      <h3>Active Trades</h3>\\r\\n    </div>\\r\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.html\n// module id = ./src/app/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport * as JWT from 'jwt-decode';\r\nimport { DataService } from '../data.service';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { passwordMatchValidator } from '../validators/passwordMatch.validator';\r\nimport { emailMatchValidator } from '../validators/emailMatch.validator';\r\nimport { passwordRequirementsValidator } from '../validators/passwordRequirements.validator';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  userData;\r\n\r\n  changeLocationForm: FormGroup;\r\n  changeEmailForm: FormGroup;\r\n  changePasswordForm: FormGroup;\r\n  deleteAccountForm: FormGroup;\r\n  editProfileForm: FormGroup;\r\n\r\n  // UI logic variables\r\n  displayEditProfileTab = true;\r\n  displayAccountSettingsTab = false;\r\n  displayChangeLocationForm = false;\r\n  displayChangeEmailForm = false;\r\n  displayChangePasswordForm = false;\r\n  displayDeleteAccountForm = false;\r\n  displayPictureSelector = false;\r\n\r\n  editBioMode = false;\r\n  selectedImgIndex = this.dataService.userData.profile.picture;\r\n\r\n  selectedImg = this.dataService.profilePics[this.selectedImgIndex];\r\n\r\n  constructor(private dataService: DataService, private formBuilder: FormBuilder) {\r\n\r\n    this.editProfileForm = formBuilder.group({\r\n      'displayName': [this.dataService.userData.profile['display name'] ? 'Enable' : 'Disable'],\r\n      'displayEmail': [this.dataService.userData.profile['display email'] ? 'Enable' : 'Disable'],\r\n      'bio': [this.dataService.userData.profile.bio],\r\n      'picture': [this.selectedImgIndex]\r\n    });\r\n\r\n    this.changeLocationForm = formBuilder.group({\r\n      'newCity': [null, Validators.required],\r\n      'newState': [null, Validators.required],\r\n      'newCountry': [null, Validators.required]\r\n    });\r\n\r\n    this.changeEmailForm = formBuilder.group({\r\n      'email': [null, Validators.compose([\r\n        Validators.required,\r\n        Validators.email\r\n      ])],\r\n      'email2': [null, Validators.compose([\r\n        Validators.required,\r\n        Validators.email\r\n      ])],\r\n    }, { validator: emailMatchValidator });\r\n\r\n    this.changePasswordForm = formBuilder.group({\r\n      'oldPassword': [null, Validators.required],\r\n      'password': [null, Validators.required],\r\n      'password2': [null, Validators.required]\r\n    }, { validator: [passwordMatchValidator, passwordRequirementsValidator] });\r\n\r\n    this.deleteAccountForm = formBuilder.group({\r\n      'password': [null, Validators.required],\r\n    }, );\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  resetView() {\r\n    this.displayPictureSelector = false;\r\n    this.editBioMode = false;\r\n  }\r\n\r\n  togglePictureSelector() {\r\n    this.displayPictureSelector = !this.displayPictureSelector;\r\n  }\r\n\r\n  setPicture(index) {\r\n    this.selectedImgIndex = index;\r\n    this.selectedImg = this.dataService.profilePics[index];\r\n    this.editProfileForm.value.picture = index;\r\n  }\r\n\r\n  toggleEditBioMode() {\r\n    this.editBioMode = !this.editBioMode;\r\n  }\r\n\r\n  displayContent(tab) {\r\n    this.displayEditProfileTab = false;\r\n    this.displayAccountSettingsTab = false;\r\n\r\n    switch (tab) {\r\n      case 'Edit Profile':\r\n        this.displayEditProfileTab = true;\r\n        break;\r\n      case 'Account Settings':\r\n        this.displayAccountSettingsTab = true;\r\n        break;\r\n    }\r\n  }\r\n\r\n  displayForm(form) {\r\n    switch (form) {\r\n      case 'location':\r\n        this.displayChangeLocationForm = !this.displayChangeLocationForm;\r\n        this.displayChangeEmailForm = false;\r\n        this.displayChangePasswordForm = false;\r\n        this.displayDeleteAccountForm = false;\r\n        break;\r\n      case 'email':\r\n        this.displayChangeEmailForm = !this.displayChangeEmailForm;\r\n        this.displayChangeLocationForm = false;\r\n        this.displayChangePasswordForm = false;\r\n        this.displayDeleteAccountForm = false;\r\n        break;\r\n      case 'password':\r\n        this.displayChangePasswordForm = !this.displayChangePasswordForm;\r\n        this.displayChangeLocationForm = false;\r\n        this.displayChangeEmailForm = false;\r\n        this.displayDeleteAccountForm = false;\r\n        break;\r\n      case 'delete account':\r\n        this.displayChangePasswordForm = false;\r\n        this.displayChangeLocationForm = false;\r\n        this.displayChangeEmailForm = false;\r\n        this.displayDeleteAccountForm = !this.displayDeleteAccountForm;\r\n        break;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.component.ts","import { Injectable } from '@angular/core';\r\nimport * as JWT from 'jwt-decode';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n  // Data storage for user that is currently signed in\r\n  // This data is Used throughout the app.\r\n  currentUser = sessionStorage.getItem('currentUser');\r\n  userData;\r\n\r\n  // URL endpoints for requests to server\r\n  serverEndpoint = 'https://gametrader.herokuapp.com';\r\n  registerEndpoint = this.serverEndpoint + '/user/register';\r\n  loginEndpoint = this.serverEndpoint + '/user/login';\r\n  changeEmailEndpoint = this.serverEndpoint + '/user/email';\r\n  changeLocationEndpoint = this.serverEndpoint + '/user/location';\r\n  changePasswordEndpoint = this.serverEndpoint + '/user/password';\r\n  addGameEndpoint = this.serverEndpoint + '/user/add_game';\r\n  deleteGameEndpoint = this.serverEndpoint + '/user/delete_game';\r\n  deleteAllEndpoint = this.serverEndpoint + '/user/delete_all';\r\n\r\n  // Data storage for error messages returned from the server.\r\n  // This is binded to the registration and login forms.\r\n  errorMsg = \"\";\r\n  errorMsgDuration = 5000; // Error messages disappear after this time has elapsed\r\n\r\n  // Stores the paths to all profile pictures that users can choose from for their user profiles\r\n  // This must be in a service because it is used in the profile and dashboard components\r\n  profilePics = [\r\n    \"./assets/profile-pics/kitty.jpg\",\r\n    \"./assets/profile-pics/puppy.jpg\",\r\n    \"./assets/profile-pics/halo.jpg\",\r\n    \"./assets/profile-pics/fallout.jpg\",\r\n    \"./assets/profile-pics/battlefield.jpg\",\r\n    \"./assets/profile-pics/masseffect.jpg\",\r\n  ]\r\n\r\n  constructor(private router: Router, private http: HttpClient) { }\r\n\r\n  // Post request to register new user\r\n  register(formData) {\r\n    this.http.post(this.registerEndpoint, formData).subscribe((res) => {\r\n      if (!res['success']) {\r\n        console.log(res);\r\n        this.flashErrorMsg(res['msg']);\r\n      } else if (res['success']) {\r\n        this.router.navigate(['login']);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Post request for user login\r\n  login(formData) {\r\n    console.log('login()');\r\n    this.http.post(this.loginEndpoint, formData).subscribe((res) => {\r\n      if (!res['success']) {\r\n        console.log(res);\r\n        this.flashErrorMsg(res['msg']);\r\n      } else if (res['success']) {\r\n        this.currentUser = res['token'];\r\n        sessionStorage.setItem('currentUser', res['token']);\r\n        this.userData = JWT(this.currentUser).user;\r\n        this.router.navigate(['/']);\r\n      }\r\n    });\r\n  }\r\n\r\n  // End user session\r\n  logout() {\r\n    this.currentUser = '';\r\n    sessionStorage.removeItem('currentUser');\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  // Display error messages on form\r\n  flashErrorMsg(error) {\r\n    this.errorMsg = error;\r\n    let context = this;\r\n    setTimeout(function () {\r\n      context.errorMsg = \"\";\r\n      console.log('3 seconds elapsed');\r\n    }, this.errorMsgDuration);\r\n  }\r\n\r\n  // -------------------------------------\r\n  //    DASHBOARD ACCOUNT SETTINGS \r\n  // -------------------------------------\r\n\r\n  changeEmail(formData) {\r\n    // Prep data for post request to server\r\n    let token = sessionStorage.getItem('currentUser');\r\n    let data = {\r\n      token: token,\r\n      formData: formData\r\n    }\r\n    // Post request\r\n    this.http.post(this.changeEmailEndpoint, data).subscribe((res) => {\r\n      let token = res['token'];\r\n      sessionStorage.setItem('currentUser', token);\r\n      this.userData = JWT(sessionStorage.getItem('currentUser')).user;\r\n    });\r\n  }\r\n\r\n  changeLocation(formData) {\r\n    // Prep data for post request\r\n    let token = sessionStorage.getItem('currentUser');\r\n    let data = {\r\n      token: token,\r\n      formData: formData\r\n    }\r\n    // Post request\r\n    this.http.post(this.changeLocationEndpoint, data).subscribe((res) => {\r\n      let token = res['token'];\r\n      sessionStorage.setItem('currentUser', token);\r\n      this.userData = JWT(sessionStorage.getItem('currentUser')).user;\r\n    });\r\n  }\r\n\r\n  changePassword(formData) {\r\n    // Prep data for post request\r\n    let token = sessionStorage.getItem('currentUser');\r\n    let data = {\r\n      token: token,\r\n      formData: formData\r\n    }\r\n    // Post request\r\n    this.http.post(this.changePasswordEndpoint, data).subscribe((res) => {\r\n      let token = res['token'];\r\n      console.log('test token', token);\r\n      sessionStorage.setItem('currentUser', token);\r\n      this.userData = JWT(sessionStorage.getItem('currentUser')).user;\r\n    });\r\n  }\r\n\r\n  deleteAccount(formData) {\r\n    // Prep data for post request\r\n    let token = sessionStorage.getItem('currentUser');\r\n    let data = {\r\n      password: formData.password,\r\n      token: token\r\n    }\r\n    // Post request\r\n    this.http.post(this.serverEndpoint + '/user/delete_account', data).subscribe((res) => {\r\n      if (res['success']) {\r\n        this.currentUser = '';\r\n        sessionStorage.removeItem('currentUser');\r\n        this.router.navigate(['/']);\r\n      }\r\n    });\r\n  }\r\n\r\n  // -------------------------------------\r\n  //    DASHBOARD EDIT PROFILE \r\n  // -------------------------------------\r\n\r\n  editProfile(formData) {\r\n    // Prep data for post request\r\n    let token = sessionStorage.getItem('currentUser');\r\n    let data = {\r\n      token: token,\r\n      formData: formData\r\n    }\r\n    // Post request\r\n    this.http.post(this.serverEndpoint + '/user/edit_profile', data).subscribe((res) => {\r\n      if (res['success']) {\r\n        let token = res['token'];\r\n        sessionStorage.setItem('currentUser', token);\r\n        this.userData = JWT(sessionStorage.getItem('currentUser')).user;\r\n      }\r\n    });\r\n  }\r\n\r\n  // -------------------------------------\r\n  //    MY GAMES FUNCTIONS \r\n  // -------------------------------------\r\n\r\n  addGame(game, platform) {\r\n    // Prep data for post request\r\n    game.platform = platform;\r\n    let token = this.currentUser;\r\n    let secureData = {\r\n      token: token,\r\n      game: game,\r\n    }\r\n    // Post request\r\n    this.http.post(this.addGameEndpoint, secureData).subscribe((res) => {\r\n      // TODO: HANDLE ERRORS\r\n      let token = res['token'];\r\n      sessionStorage.setItem('currentUser', token);\r\n      this.currentUser = res['token'];\r\n      this.userData = JWT(sessionStorage.getItem('currentUser')).user;\r\n    });\r\n  }\r\n\r\n  deleteGame(game) {\r\n    // Prep data for post request\r\n    let token = this.currentUser;\r\n    let secureData = {\r\n      token: token,\r\n      game: game\r\n    }\r\n    // Post request\r\n    this.http.post(this.deleteGameEndpoint, secureData).subscribe((res) => {\r\n      // TODO: HANDLE ERRORS\r\n      let token = res['token'];\r\n      sessionStorage.setItem('currentUser', token);\r\n      this.currentUser = res['token'];\r\n      this.userData = JWT(sessionStorage.getItem('currentUser')).user;\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/data.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class GamesDataService {\r\n  // Client gets search results form IGDB via proxy through the server to avoid cors issue.\r\n  serverEndpoint = 'https://gametrader.herokuapp.com';\r\n  IGDB_API_KEYWORD_SEARCH_ENDPOINT = this.serverEndpoint + '/games/igdb_keyword_search/';\r\n  IDGB_API_GAME_ID_SEARCH_ENDPOINT = this.serverEndpoint + '/games/igdb_game_id_search/';\r\n  getCoverEndpoint = this.serverEndpoint + '/user/get_cover_url';\r\n\r\n  // Data storage.  This array is binded to my-games component.\r\n  searchResults = [];\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Make get request to server to perform game title search\r\n  searchGame(searchFormValue) {\r\n    this.searchResults = [];\r\n    let query = searchFormValue.query;\r\n\r\n    this.http.get(this.IGDB_API_KEYWORD_SEARCH_ENDPOINT + query).subscribe((res) => {\r\n      //This end point returns a list of game ID's from IGDB pertaining to search query\r\n      let context = this;\r\n      let searchResults = res;\r\n\r\n      // Iterate through each game ID and make get request for each game to get game data\r\n      for (var game in searchResults) {\r\n        let gameId = searchResults[game].id\r\n        this.http.get(this.IDGB_API_GAME_ID_SEARCH_ENDPOINT + gameId).subscribe((res) => {\r\n\r\n          let title = res[0].name;\r\n          let cover: String;\r\n\r\n          if (res[0].cover) {\r\n            cover = '//images.igdb.com/igdb/image/upload/t_cover_big/' + res[0]['cover']['cloudinary_id'];\r\n          } else {\r\n            cover = '/assets/square-placeholder.jpg';\r\n          }\r\n\r\n          // Prep data to populate searchResults array\r\n          let game = {\r\n            title: title,\r\n            cover: cover\r\n          }\r\n          this.searchResults.push(game);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // Helper function:  Returns the cover-url for the game that is passed in.\r\n  getCoverUrl(gameOwner, gameName) {\r\n    this.http.get(this.getCoverEndpoint, {\r\n      params: {\r\n        gameOwner: gameOwner,\r\n        gameName: gameName\r\n      }\r\n    }).subscribe((res) => {\r\n      console.log(res['cover']);\r\n      return res['cover'];\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/games-data.service.ts","module.exports = \"\\r\\n.splash-bg {\\r\\n    height: 100vh;\\r\\n    width: 100%;\\r\\n    background: url('/assets/game-controller.jpeg');\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;\\r\\n    background-position: center;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    z-index: 0;\\r\\n    -webkit-filter: grayscale(.75);\\r\\n            filter: grayscale(.75);\\r\\n}\\r\\n\\r\\n.splash-text h1 {\\r\\n    font-family: 'Orbitron';\\r\\n    font-size: 3rem;\\r\\n}\\r\\n\\r\\n.splash-text {\\r\\n    height:100vh;\\r\\n    width: 100%;\\r\\n    color: #FFF;\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n    -webkit-box-pack: center;\\r\\n        -ms-flex-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: start;\\r\\n        -ms-flex-align: start;\\r\\n            align-items: flex-start;\\r\\n    text-align: left;\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    z-index: 1;\\r\\n    padding-left: 50px;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n#sign-in-link {\\r\\n    position: absolute;\\r\\n    top: 20px;\\r\\n    right: 50px;\\r\\n    z-index: 2;\\r\\n}\\r\\n\\r\\n#splash {\\r\\n    height: 400px;\\r\\n    margin: 50px auto 0 auto;\\r\\n    width: 100%;\\r\\n    background: url('/assets/heroes.png');\\r\\n    background-size: cover;\\r\\n    background-position: center;\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: end;\\r\\n        -ms-flex-pack: end;\\r\\n            justify-content: flex-end;\\r\\n    -webkit-box-align: center;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n}\\r\\n\\r\\n.splash-blocks-container {\\r\\n    width: 100%;\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -ms-flex-wrap: wrap;\\r\\n        flex-wrap: wrap;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n}\\r\\n\\r\\n.splash-block1 {\\r\\n    background: rgba(0, 0, 255, 0.5);\\r\\n    width: 100%;\\r\\n    padding: 20px 0;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.splash-skills {\\r\\n    width: 100%;\\r\\n    padding: 5px 0;\\r\\n    color: #FFF;\\r\\n    list-style-type: none;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.splash-skills li {\\r\\n    display: inline-block;\\r\\n    padding: 20px;\\r\\n    text-transform: uppercase;\\r\\n    font-size: 0.8rem;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.splash-block1 a,\\r\\n.splash-block1 h1,\\r\\n.splash-block1 h4 {\\r\\n    color: yellow;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\n#splash h1 {\\r\\n    font-family: 'Orbitron';\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 700px) {\\r\\n\\r\\n    #sign-in-link {\\r\\n        right: 20px;\\r\\n    }\\r\\n    \\r\\n    .splash-text {\\r\\n        padding: 0;\\r\\n        margin: 0 auto;\\r\\n    }\\r\\n\\r\\n    .splash-text * {\\r\\n        margin: 10px 25px;\\r\\n    }\\r\\n\\r\\n    .splash-text h1 {\\r\\n        font-size: 2rem;\\r\\n    }\\r\\n\\r\\n    .splash-skills li {\\r\\n        font-size: 0.6rem;\\r\\n        padding: 10px;\\r\\n    }\\r\\n\\r\\n\\r\\n    #splash {\\r\\n        max-height: 100vh;\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = ./src/app/home/home.component.css\n// module chunks = main","module.exports = \"\\r\\n        <div id=\\\"splash\\\" *ngIf=\\\"this.dataService.currentUser\\\">\\r\\n                <div class=\\\"splash-blocks-container\\\">\\r\\n                        <div class=\\\"splash-block1\\\">\\r\\n                                <h1>GameTrader</h1>\\r\\n                                <h4>A freecodecamp project</h4>\\r\\n                                <h4>Powered by\\r\\n                                        <a href=\\\"https://www.igdb.com/\\\" target=\\\"_blank\\\">IGDB API</a>\\r\\n                                </h4>\\r\\n                        </div>\\r\\n                        <ul class=\\\"splash-skills\\\">\\r\\n                                <li>HTML</li>\\r\\n                                <li>CSS</li>\\r\\n                                <li>JavaScript</li>\\r\\n                                <li>TypeScript</li>\\r\\n                                <li>MongoDB</li>\\r\\n                                <li>ExpressJS</li>\\r\\n                                <li>Angular</li>\\r\\n                                <li>NodeJS</li>\\r\\n                                </ul>\\r\\n                </div>\\r\\n        </div>\\r\\n\\r\\n<div class=\\\"container\\\" *ngIf=\\\"this.dataService.currentUser; else loggedOut\\\">\\r\\n\\r\\n        <div *ngIf=\\\"this.homeGames.length > 0; else noHomeGames\\\" class=\\\"game-grid\\\">\\r\\n                <div *ngFor=\\\"let game of this.homeGames\\\">\\r\\n                        <div class=\\\"game-card\\\" *ngIf=\\\"game.available\\\">\\r\\n                                <div class=\\\"game-card-img-container\\\">\\r\\n                                        <img src=\\\"{{game.cover}}\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"game-card-p-container\\\">\\r\\n                                        <p>{{game.title}}</p>\\r\\n                                        <p>{{game.platform}}</p>\\r\\n                                        <a [routerLink]=\\\"['/profile', game.owner]\\\">{{game.owner}}</a>\\r\\n                                </div>\\r\\n                                <p class=\\\"game-card-status\\\" *ngIf=\\\"this.tradeService.alreadyRequested(game)\\\">Request pending</p>\\r\\n                                <button *ngIf=\\\"dataService.currentUser && !this.tradeService.alreadyRequested(game)\\\" (click)=\\\" this.tradeService.getTradeData(); this.tradeService.requestTrade(this.dataService.userData.username, game)\\\">Request Trade</button>\\r\\n                        </div>\\r\\n                </div>\\r\\n        </div>\\r\\n\\r\\n        <ng-template #noHomeGames>\\r\\n                <p class=\\\"content-description\\\">There are no games to display.</p>\\r\\n        </ng-template>\\r\\n</div>\\r\\n\\r\\n\\r\\n<ng-template #loggedOut>\\r\\n        <div class=\\\"splash-bg\\\">\\r\\n        </div>\\r\\n        <div class=\\\"splash-text\\\">\\r\\n                <h1>GameTrader</h1>\\r\\n                <h2>A club for gamers.</h2>\\r\\n                <h2>Trade console games with other gamers in your city.</h2>\\r\\n                <button id=\\\"sign-up-link\\\" routerLink=\\\"register\\\">Sign up for free!</button>\\r\\n        </div>\\r\\n\\r\\n        <!-- TOP RIGHT CORNER OF SCREEN -->\\r\\n        <button id=\\\"sign-in-link\\\" routerLink=\\\"login\\\">Sign in</button>\\r\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = ./src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../data.service';\r\nimport { TradeService } from '../trade.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  searchForm: FormGroup\r\n  homeGames;\r\n  serverEndpoint = 'https://gametrader.herokuapp.com';\r\n  getAllEndPoint = this.serverEndpoint + '/games/get_all';\r\n\r\n  constructor(private formBuilder:FormBuilder, private http:HttpClient, private dataService:DataService, private tradeService:TradeService) {\r\n      this.searchForm = formBuilder.group({\r\n        query: [null, Validators.required]\r\n      });\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.refreshGames();\r\n    this.tradeService.getTradeData();\r\n  }\r\n\r\n  refreshGames(){\r\n    this.http.get(this.getAllEndPoint).subscribe((res)=>{\r\n      this.homeGames = res;\r\n    }); \r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","module.exports = \".login-form {\\r\\n    max-width: 400px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = ./src/app/login/login.component.css\n// module chunks = main","module.exports = \"<a id=\\\"logo-black\\\" routerLink=\\\"/\\\">GameTrader</a>\\r\\n\\r\\n  <div class=\\\"container\\\">\\r\\n  <h1 class=\\\"component-title\\\">Sign In</h1>\\r\\n  <form class=\\\"login-form theme\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"this.dataService.login(loginForm.value)\\\">\\r\\n      <label>Name\\r\\n        <input type=\\\"text\\\" formControlName=\\\"username\\\" name=\\\"username\\\">\\r\\n      </label>\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"!loginForm.controls['username'].valid && loginForm.controls['username'].touched\\\">Username is required.</div>\\r\\n\\r\\n      <label>Password\\r\\n        <input type=\\\"password\\\" formControlName=\\\"password\\\" name=\\\"password\\\">\\r\\n      </label>\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"!loginForm.controls['password'].valid && loginForm.controls['password'].touched\\\">Password is required.</div>\\r\\n\\r\\n\\r\\n      <input type=\\\"submit\\\" class=\\\"button expanded\\\" value=\\\"Submit\\\" [disabled]=\\\"!loginForm.valid\\\">\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"this.dataService.errorMsg\\\">{{this.dataService.errorMsg}}</div>\\r\\n</form>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from '../data.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n\r\n  constructor(private formBuilder:FormBuilder, private dataService:DataService) {\r\n    this.loginForm = formBuilder.group({\r\n      'username': [null, Validators.required],\r\n      'password': [null, Validators.required]\r\n    });\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/my-games/my-games.component.css\n// module id = ./src/app/my-games/my-games.component.css\n// module chunks = main","module.exports = \"<ul class=\\\"tab-menu-mobile\\\">\\r\\n    <li>\\r\\n        <a (click)=\\\"displayContent('My Games')\\\">My Games</a>\\r\\n    </li>\\r\\n    <li>\\r\\n        <a (click)=\\\"displayContent('Add Games')\\\">Add Games</a>\\r\\n    </li>\\r\\n</ul>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n    <ul class=\\\"tab-menu\\\">\\r\\n        <li>\\r\\n            <a (click)=\\\"displayContent('My Games')\\\">My Games</a>\\r\\n        </li>\\r\\n        <li>\\r\\n            <a (click)=\\\"displayContent('Add Games')\\\">Add Games</a>\\r\\n        </li>\\r\\n    </ul>\\r\\n\\r\\n    <div *ngIf=\\\"displayMyGames\\\" class=\\\"tab-content\\\">\\r\\n        <h3 class=\\\"component-title\\\">My Games</h3>\\r\\n        <p class=\\\"content-description\\\">*Games that you add here will be displayed publicly as available for trade.</p>\\r\\n        <div class=\\\"game-grid\\\">\\r\\n            <div class=\\\"game-card\\\" *ngFor=\\\"let game of this.dataService.userData.games\\\">\\r\\n                <div class=\\\"game-card-img-container\\\">\\r\\n                    <img src=\\\"{{game.cover}}\\\"> </div>\\r\\n                <div class=\\\"game-card-p-container\\\">\\r\\n                    <p>{{game.title}}</p>\\r\\n                    <p>{{game.platform}}</p>\\r\\n                </div>\\r\\n\\r\\n                <button (click)=\\\"this.dataService.deleteGame(game)\\\">Delete</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"displayAddGames\\\" class=\\\"tab-content\\\">\\r\\n        <h3 class=\\\"component-title\\\">Add Games</h3>\\r\\n        <form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"this.gamesDataService.searchGame(searchForm.value)\\\">\\r\\n            <div class=\\\"search-bar\\\">\\r\\n                <input type=\\\"text\\\" formControlName=\\\"query\\\" name=\\\"query\\\" placeholder=\\\"Search for a game title...\\\">\\r\\n                <input type=\\\"submit\\\" value=\\\"Search\\\" [disabled]=\\\"!searchForm.valid\\\">\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n        <div class=\\\"game-grid\\\">\\r\\n            <div class=\\\"game-card\\\" *ngFor=\\\"let game of this.gamesDataService.searchResults\\\">\\r\\n                <div class=\\\"game-card-img-container\\\">\\r\\n                    <img src={{game.cover}}>\\r\\n                </div>\\r\\n                <div class=\\\"game-card-p-container\\\">\\r\\n                    <p>{{game.title}}</p>\\r\\n                    <select [(ngModel)]=\\\"selectedOption\\\">\\r\\n                        <option>Select a platform</option>\\r\\n                        <option value=\\\"PlayStation 2\\\">PlayStation 2</option>\\r\\n                        <option value=\\\"PlayStation 3\\\">PlayStation 3</option>\\r\\n                        <option value=\\\"PlayStation 4\\\">PlayStation 4</option>\\r\\n                        <option value=\\\"PC\\\">PC</option>\\r\\n                        <option value=\\\"Wii\\\">Wii</option>\\r\\n                        <option value=\\\"Wii U\\\">Wii U</option>\\r\\n                        <option value=\\\"X Box One\\\">X Box One</option>\\r\\n                        <option value=\\\"X Box 360\\\">X Box 360</option>\\r\\n                        <option value=\\\"X Box\\\">X Box</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n\\r\\n                <button (click)=\\\"this.dataService.addGame(game, selectedOption)\\\" [disabled]=\\\"!selectedOption\\\">Add Game</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/my-games/my-games.component.html\n// module id = ./src/app/my-games/my-games.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, FormsModule } from '@angular/forms';\r\nimport { GamesDataService } from '../games-data.service';\r\nimport { DataService } from '../data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-my-games',\r\n  templateUrl: './my-games.component.html',\r\n  styleUrls: ['./my-games.component.css']\r\n})\r\n\r\nexport class MyGamesComponent implements OnInit {\r\n\r\n  searchForm: FormGroup;\r\n  displayMyGames = true; //Default view on load\r\n  displayAddGames = false;\r\n  selectedOption: String;\r\n\r\n  constructor(private dataService:DataService, private gamesDataService:GamesDataService, private formBuilder:FormBuilder) {\r\n    this.searchForm = formBuilder.group({\r\n      'query':[null, Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.gamesDataService.searchResults = [];\r\n  }\r\n\r\n  displayContent(tabName){\r\n    switch(tabName){\r\n      case 'My Games': \r\n        this.displayMyGames = true;\r\n        this.displayAddGames = false;\r\n        break;\r\n      case 'Add Games': \r\n        this.displayMyGames = false;\r\n        this.displayAddGames = true;\r\n        break;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/my-games/my-games.component.ts","module.exports = \"\\r\\n.trade-request-placeholder {\\r\\n    -webkit-box-sizing: border-box;\\r\\n            box-sizing: border-box;\\r\\n    border: 5px gray dashed;\\r\\n    height: 100%;\\r\\n    width: 150px;\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n        -ms-flex-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n    font-size: 0.8rem;\\r\\n    text-align: center;\\r\\n    padding: 25px;\\r\\n    line-height: 1.2rem;\\r\\n}\\r\\n\\r\\ntable {\\r\\n    padding: 0;\\r\\n    margin: 20px auto;\\r\\n    color: #FFF;\\r\\n    border-spacing: 0;\\r\\n}\\r\\n\\r\\ntable td,\\r\\ntable th {\\r\\n    padding: 15px;\\r\\n}\\r\\n\\r\\ntable tr td:nth-child(1){\\r\\n    width: 250px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\ntable tr td:nth-child(2){\\r\\n    text-align: left;\\r\\n    line-height: 1.5;\\r\\n}\\r\\n\\r\\ntable tr:nth-child(odd) {\\r\\n    background: rgb(35, 35, 35);\\r\\n}\\r\\n\\r\\ntable tr:nth-child(even) {\\r\\n    background: rgb(25, 25, 25);\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 600px) {\\r\\n\\r\\n    table tr td:nth-child(1){\\r\\n        width: 35%;\\r\\n    }\\r\\n\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/my-trades/my-trades.component.css\n// module id = ./src/app/my-trades/my-trades.component.css\n// module chunks = main","module.exports = \"\\r\\n<ul class=\\\"tab-menu-mobile\\\">\\r\\n    <li>\\r\\n      <a id=\\\"incoming-tab\\\" (click)=\\\"this.tradeService.getTradeData(); displayContent('Incoming Trade Requests')\\\">Incoming Trade Requests ({{this.tradeService.incoming.length}})</a>\\r\\n    </li>\\r\\n    <li>\\r\\n      <a id=\\\"outgoing-tab\\\" (click)=\\\"this.tradeService.getTradeData(); displayContent('Outgoing Trade Requests')\\\">Outgoing Trade Requests ({{this.tradeService.outgoing.length}})</a>\\r\\n    </li>\\r\\n    <li>\\r\\n      <a id=\\\"active-tab\\\" (click)=\\\"this.tradeService.getTradeData(); displayContent('Active Trades')\\\">Active Trades ({{this.tradeService.active.length}})</a>\\r\\n    </li>\\r\\n    <li>\\r\\n      <a id=\\\"history-tab\\\" (click)=\\\"this.tradeService.getTradeData(); displayContent('Trade History')\\\">Trade History</a>\\r\\n    </li>\\r\\n  </ul>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <ul class=\\\"tab-menu\\\">\\r\\n    <li>\\r\\n      <a id=\\\"incoming-tab\\\" (click)=\\\"this.tradeService.getTradeData(); displayContent('Incoming Trade Requests')\\\">Incoming Trade Requests ({{this.tradeService.incoming.length}})</a>\\r\\n    </li>\\r\\n    <li>\\r\\n      <a id=\\\"outgoing-tab\\\" (click)=\\\"this.tradeService.getTradeData(); displayContent('Outgoing Trade Requests')\\\">Outgoing Trade Requests ({{this.tradeService.outgoing.length}})</a>\\r\\n    </li>\\r\\n    <li>\\r\\n      <a id=\\\"active-tab\\\" (click)=\\\"this.tradeService.getTradeData(); displayContent('Active Trades')\\\">Active Trades ({{this.tradeService.active.length}})</a>\\r\\n    </li>\\r\\n    <li>\\r\\n      <a id=\\\"history-tab\\\" (click)=\\\"this.tradeService.getTradeData(); displayContent('Trade History')\\\">Trade History</a>\\r\\n    </li>\\r\\n  </ul>\\r\\n\\r\\n  <div *ngIf=\\\"displayIncomingTradeRequests\\\" class=\\\"tab-content\\\">\\r\\n    <h3>Incoming Trade Requests</h3>\\r\\n\\r\\n    <div *ngIf=\\\"this.tradeService.incoming.length > 0; else noIncoming\\\" class=\\\"trades-container\\\">\\r\\n      <div class=\\\"trade-card theme\\\" *ngFor=\\\"let tradeRequest of this.tradeService.incoming\\\">\\r\\n        <h4 class=\\\"game-card-date\\\">{{tradeRequest.date | date:'fullDate'}}</h4>\\r\\n        <p>\\r\\n          <a [routerLink]=\\\"['/profile', tradeRequest.initiator]\\\">{{tradeRequest.initiator}}</a> has requested to trade with you.</p>\\r\\n\\r\\n        <div class=\\\"trade-match\\\">\\r\\n          <div class=\\\"game-card\\\">\\r\\n            <div class=\\\"game-card-img-container\\\">\\r\\n              <img src=\\\"{{tradeRequest.game.cover}}\\\">\\r\\n            </div>\\r\\n            <div class=\\\"game-card-p-container\\\">\\r\\n              <p>{{tradeRequest.game.title}}</p>\\r\\n              <p>{{tradeRequest.game.platform}}</p>\\r\\n              <a [routerLink]=\\\"['/profile', tradeRequest.game.owner]\\\">{{tradeRequest.game.owner}}</a>\\r\\n            </div>\\r\\n            <p class=\\\"game-card-status\\\">Request pending</p>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"tradeRequest.game2; else noGame2\\\" class=\\\"game-card\\\">\\r\\n            <div class=\\\"game-card-img-container\\\">\\r\\n              <img src=\\\"{{tradeRequest.game2.cover}}\\\">\\r\\n            </div>\\r\\n            <div class=\\\"game-card-p-container\\\">\\r\\n              <p>{{tradeRequest.game2.title}}</p>\\r\\n              <p>{{tradeRequest.game2.platform}}</p>\\r\\n              <p>{{tradeRequest.game2.owner}}</p>\\r\\n            </div>\\r\\n            <button (click)=\\\"displayContent('Game Selector'); openSelectGameWindow(tradeRequest)\\\">Change Selection</button>\\r\\n          </div>\\r\\n\\r\\n          <ng-template #noGame2>\\r\\n            <div class=\\\"game-card\\\">\\r\\n              <div class=\\\"trade-request-placeholder\\\">\\r\\n                <a (click)=\\\"displayContent('Game Selector'); openSelectGameWindow(tradeRequest)\\\">\\r\\n                  Select a game from {{tradeRequest.initiator}} to complete this trade.\\r\\n                </a>\\r\\n              </div>\\r\\n              <button (click)=\\\"displayContent('Game Selector'); openSelectGameWindow(tradeRequest)\\\">Select Game</button>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n        </div>\\r\\n\\r\\n        <div>\\r\\n          <button (click)=\\\"this.tradeService.acceptTradeRequest(tradeRequest)\\\" [disabled]=\\\"!tradeRequest.game2\\\">Accept</button>\\r\\n          <button (click)=\\\"this.tradeService.denyTradeRequest(tradeRequest)\\\">Deny</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <ng-template #noIncoming>\\r\\n      <p class=\\\"content-description\\\">You have no incoming trade requests at this time.</p>\\r\\n    </ng-template>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"displayOutgoingTradeRequests\\\" class=\\\"tab-content\\\">\\r\\n    <h3>Outgoing Trade Requests</h3>\\r\\n\\r\\n    <div *ngIf=\\\"this.tradeService.outgoing.length > 0; else noOutgoing\\\" class=\\\"trades-container\\\">\\r\\n      <div class=\\\"trade-card theme\\\" *ngFor=\\\"let tradeRequest of this.tradeService.outgoing\\\">\\r\\n        <h4 class=\\\"game-card-date\\\">{{tradeRequest.date | date:'fullDate'}}</h4>\\r\\n        <p>You requested to trade with <a [routerLink]=\\\"['/profile', tradeRequest.game.owner]\\\">{{tradeRequest.game.owner}}</a></p>\\r\\n        <div class=\\\"game-card\\\">\\r\\n          <div class=\\\"game-card-img-container\\\">\\r\\n            <img src=\\\"{{tradeRequest.game.cover}}\\\">\\r\\n          </div>\\r\\n          <div class=\\\"game-card-p-container\\\">\\r\\n            <p>{{tradeRequest.game.title}}</p>\\r\\n            <p>{{tradeRequest.game.platform}}</p>\\r\\n            <a [routerLink]=\\\"['/profile', tradeRequest.game.owner]\\\">{{tradeRequest.game.owner}}</a>\\r\\n          </div>\\r\\n          <button (click)=\\\"this.tradeService.cancelTradeRequest(tradeRequest)\\\">Cancel</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <ng-template #noOutgoing>\\r\\n      <p class=\\\"content-description\\\">You have no outgoing trade requests at this time.</p>\\r\\n    </ng-template>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"displayActiveTrades\\\" class=\\\"tab-content\\\">\\r\\n    <h3>Active Trades</h3>\\r\\n\\r\\n\\r\\n    <div *ngIf=\\\"this.tradeService.active.length > 0; else noActive\\\" class=\\\"trades-container\\\">\\r\\n      <div class=\\\"trade-card theme\\\" *ngFor=\\\"let trade of this.tradeService.active;\\\">\\r\\n        <h4 class=\\\"game-card-date\\\">{{trade.date | date:'fullDate'}}</h4>\\r\\n        <div class=\\\"trade-match\\\">\\r\\n          <div class=\\\"game-card\\\">\\r\\n            <div class=\\\"game-card-img-container\\\">\\r\\n              <img src=\\\"{{trade.game.cover}}\\\">\\r\\n            </div>\\r\\n            <div class=\\\"game-card-p-container\\\">\\r\\n              <p>{{trade.game.title}}</p>\\r\\n              <p>{{trade.game.platform}}</p>\\r\\n              <a [routerLink]=\\\"['/profile', trade.game.owner]\\\">{{trade.game.owner}}</a>\\r\\n            </div>\\r\\n\\r\\n            <button *ngIf=\\\"trade.game.owner === this.dataService.userData.username && !trade.gameReturned\\\" (click)=\\\"this.tradeService.markReturned(trade.date, 'game')\\\">\\r\\n              Mark as returned\\r\\n            </button>\\r\\n            <p class=\\\"game-card-status\\\" *ngIf=\\\"trade.gameReturned\\\">RETURNED</p>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"game-card\\\">\\r\\n            <div class=\\\"game-card-img-container\\\">\\r\\n              <img src=\\\"{{trade.game2.cover}}\\\">\\r\\n            </div>\\r\\n            <div class=\\\"game-card-p-container\\\">\\r\\n\\r\\n              <p>{{trade.game2.title}}</p>\\r\\n              <p>{{trade.game2.platform}}</p>\\r\\n              <a [routerLink]=\\\"['/profile', trade.game2.owner]\\\">{{trade.game2.owner}}</a>\\r\\n            </div>\\r\\n            <button *ngIf=\\\"trade.game2.owner === this.dataService.userData.username && !trade.game2Returned\\\" (click)=\\\"this.tradeService.markReturned(trade.date, 'game2')\\\">\\r\\n              Mark as returned\\r\\n            </button>\\r\\n            <p class=\\\"game-card-status\\\" *ngIf=\\\"trade.game2Returned\\\">RETURNED</p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <ng-template #noActive>\\r\\n      <p class=\\\"content-description\\\">You have no active trades at this time.</p>\\r\\n    </ng-template>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div *ngIf=\\\"displayTradeHistory\\\" class=\\\"tab-content\\\">\\r\\n    <h3>Trade History</h3>\\r\\n\\r\\n    <div *ngIf=\\\"this.tradeService.history.length > 0; else noHistory\\\">\\r\\n      <table class=\\\"theme\\\">\\r\\n        <tr>\\r\\n          <th>\\r\\n            <p>Date</p>\\r\\n          </th>\\r\\n          <th>\\r\\n            <p>Activity</p>\\r\\n          </th>\\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let record of this.tradeService.history.reverse()\\\">\\r\\n\\r\\n          <td>\\r\\n            <p>\\r\\n              {{record.date | date:'fullDate'}}\\r\\n            </p>\\r\\n          </td>\\r\\n          <td>\\r\\n            <p>\\r\\n              {{record.msg}}\\r\\n            </p>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n    <ng-template #noHistory>\\r\\n      <p class=\\\"content-description\\\">There is no trade history to display.</p>\\r\\n    </ng-template>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"this.displayGameSelector\\\" class=\\\"tab-content\\\" id=\\\"selectGameWindow\\\">\\r\\n    <h4>Choose a game from {{selectGameWindowInitiator}} to complete this trade:</h4>\\r\\n    <button (click)=\\\"closeSelectGameWindow()\\\">Cancel</button>\\r\\n    <div *ngIf=\\\"selectGameWindowGames.length > 0; else noAvailableGames\\\">\\r\\n\\r\\n      <div class=\\\"game-grid\\\">\\r\\n        <div class=\\\"game-card\\\" *ngFor=\\\"let game of selectGameWindowGames\\\">\\r\\n          <div class=\\\"game-card-img-container\\\">\\r\\n            <img src=\\\"{{game.cover}}\\\">\\r\\n          </div>\\r\\n          <div class=\\\"game-card-p-container\\\">\\r\\n            <p>{{game.title}}</p>\\r\\n            <p>{{game.platform}}</p>\\r\\n            <a [routerLink]=\\\"['/profile', game.owner]\\\">{{game.owner}}</a>\\r\\n          </div>\\r\\n          <button (click)=\\\"selectGame(game)\\\">Select Game</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <ng-template #noAvailableGames>\\r\\n      <p class=\\\"content-description\\\">{{selectGameWindowInitiator}} currently does not have any games available for trade. Please try again at a later date.</p>\\r\\n    </ng-template>\\r\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/my-trades/my-trades.component.html\n// module id = ./src/app/my-trades/my-trades.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { TradeService } from '../trade.service';\r\nimport { DataService } from '../data.service';\r\nimport { GamesDataService } from '../games-data.service';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-my-trades',\r\n  templateUrl: './my-trades.component.html',\r\n  styleUrls: ['./my-trades.component.css']\r\n})\r\nexport class MyTradesComponent implements OnInit {\r\n\r\n  serverEndpoint = 'https://gametrader.herokuapp.com';\r\n\r\n  // UI logic variables\r\n  displayIncomingTradeRequests = true; // set to true to display on load\r\n  displayOutgoingTradeRequests = false;\r\n  displayTradeHistory = false;\r\n  displayActiveTrades = false;\r\n  displaySelectGameWindow = false;\r\n  displayGameSelector = false;\r\n\r\n  // Data storage for select-game window\r\n  selectGameWindowGames = [];\r\n  selectGameWindowInitiator = '';\r\n  selectGameWindowTradeRequest;\r\n  tradeRequest; \r\n  initiator = '';\r\n  initiatorGames = [];\r\n\r\n  constructor(private gamesDataService: GamesDataService, private dataService: DataService, private http: HttpClient, private tradeService: TradeService) { }\r\n\r\n  ngOnInit() {\r\n    this.tradeService.getTradeData();\r\n  }\r\n\r\n  // Get data to populate select-game window\r\n  selectGameWindow(tradeRequest) {\r\n    this.displaySelectGameWindow = true;\r\n    this.initiator = tradeRequest.initiator;\r\n    this.tradeRequest = tradeRequest;\r\n    let getProfileDataEndpoint = this.serverEndpoint + '/user/profile/' + tradeRequest.initiator;\r\n\r\n    this.http.get(getProfileDataEndpoint).subscribe((res) => {\r\n      this.initiatorGames = res['games'];\r\n    });\r\n  }\r\n\r\n  selectGame(game) {\r\n    let secureData = {\r\n      token: this.dataService.currentUser,\r\n      game: game,\r\n      tradeRequest: this.selectGameWindowTradeRequest\r\n    }\r\n    //Add game as game2 to this traderequest in gameOwner's incoming array\r\n    let selectGameForTradeEndpoint = this.serverEndpoint + '/user/select_game_for_trade';\r\n    this.http.post(selectGameForTradeEndpoint, secureData).subscribe((res) => {\r\n      this.tradeService.getTradeData();\r\n      this.closeSelectGameWindow();\r\n    });\r\n  }\r\n\r\n  openSelectGameWindow(tradeRequest) {\r\n    this.selectGameWindowGames = [];\r\n    this.selectGameWindowInitiator = '';\r\n    this.selectGameWindowTradeRequest = tradeRequest;\r\n    this.displaySelectGameWindow = true;\r\n    let initiator = tradeRequest.initiator;\r\n    let getAllGamesEndpoint = this.serverEndpoint + '/games/get_all/';\r\n    this.http.get(getAllGamesEndpoint).subscribe((res) => {\r\n      for (let game in res) {\r\n        if (res[game]['owner'] === initiator && !this.tradeService.alreadyRequested(res[game]) && res[game].available) {\r\n          this.selectGameWindowGames.push(res[game]);\r\n        }\r\n      }\r\n      this.selectGameWindowInitiator = initiator;\r\n    });\r\n  }\r\n\r\n  closeSelectGameWindow() {\r\n    this.displayGameSelector = false;\r\n    this.displayIncomingTradeRequests = true;\r\n  }\r\n\r\n  displayContent(tab) {\r\n    this.displayIncomingTradeRequests = false;\r\n    this.displayOutgoingTradeRequests = false;\r\n    this.displayTradeHistory = false;\r\n    this.displayActiveTrades = false;\r\n    this.displayGameSelector = false;\r\n\r\n    switch (tab) {\r\n      case 'Incoming Trade Requests': this.displayIncomingTradeRequests = true; break;\r\n      case 'Outgoing Trade Requests': this.displayOutgoingTradeRequests = true; break;\r\n      case 'Trade History': this.displayTradeHistory = true; break;\r\n      case 'Active Trades': this.displayActiveTrades = true; break;\r\n      case 'Game Selector': this.displayGameSelector = true; break;\r\n\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/my-trades/my-trades.component.ts","module.exports = \"\\r\\n\\r\\n\\r\\n.profile-container {\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: horizontal;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: row;\\r\\n            flex-direction: row;\\r\\n    max-width: 1200px;\\r\\n    min-height: 100vh;\\r\\n    margin: 0 auto;\\r\\n    padding: 100px 0;\\r\\n    -webkit-box-pack: center;\\r\\n        -ms-flex-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: start;\\r\\n        -ms-flex-align: start;\\r\\n            align-items: flex-start;\\r\\n}\\r\\n\\r\\n.profile-column {\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n    -webkit-box-pack: start;\\r\\n        -ms-flex-pack: start;\\r\\n            justify-content: flex-start;\\r\\n    -webkit-box-align: start;\\r\\n        -ms-flex-align: start;\\r\\n            align-items: flex-start;\\r\\n}\\r\\n\\r\\n.profile-column:nth-child(2){\\r\\n    width:70%;\\r\\n}\\r\\n\\r\\n.gamer-card{\\r\\n    width: 200px;\\r\\n    height: auto;\\r\\n    padding: 15px;\\r\\n    margin: 0 50px 15px 50px;\\r\\n}\\r\\n\\r\\n.review-container {\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: horizontal;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: row;\\r\\n            flex-direction: row;\\r\\n    -ms-flex-wrap: wrap;\\r\\n        flex-wrap: wrap;\\r\\n    -webkit-box-pack: start;\\r\\n        -ms-flex-pack: start;\\r\\n            justify-content: flex-start;\\r\\n    -webkit-box-align: start;\\r\\n        -ms-flex-align: start;\\r\\n            align-items: flex-start;\\r\\n    overflow: auto;\\r\\n    width: 100%;\\r\\n    max-height: 350px;\\r\\n}\\r\\n\\r\\n.review-card {\\r\\n    background: rgb(39, 39, 39);\\r\\n    color: rgb(255, 255, 255);\\r\\n    -webkit-box-shadow: 2px 2px 5px rgb(75, 75, 75);\\r\\n            box-shadow: 2px 2px 5px rgb(75, 75, 75);\\r\\n    margin: 10px;\\r\\n    padding: 10px;\\r\\n    width: 200px;\\r\\n    font-size: 0.8rem;\\r\\n}\\r\\n\\r\\n.review-card a {\\r\\n    color:#FFF;\\r\\n}\\r\\n\\r\\n.review-card a:hover {\\r\\n    color: silver;\\r\\n}\\r\\n\\r\\n.review-form {\\r\\n    width: 90%;\\r\\n    height: 200px;\\r\\n    margin: auto;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.review-form textarea {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    padding: 0px;\\r\\n    margin: 10px;\\r\\n}\\r\\n\\r\\n@media only screen and (max-width:700px){\\r\\n    .profile-container{\\r\\n        width: 100vw;\\r\\n        -webkit-box-orient: vertical;\\r\\n        -webkit-box-direction: normal;\\r\\n            -ms-flex-direction: column;\\r\\n                flex-direction: column;\\r\\n        padding: 50px 0;\\r\\n    }\\r\\n\\r\\n    .profile-column {\\r\\n        width: 100vw;\\r\\n    }\\r\\n\\r\\n    .gamer-card {\\r\\n        width: 100vw;\\r\\n        margin: 10px auto;\\r\\n        padding: 0;\\r\\n        display: -webkit-box;\\r\\n        display: -ms-flexbox;\\r\\n        display: flex;\\r\\n        -webkit-box-orient: horizontal;\\r\\n        -webkit-box-direction: normal;\\r\\n            -ms-flex-direction: row;\\r\\n                flex-direction: row;\\r\\n        -ms-flex-wrap: wrap;\\r\\n            flex-wrap: wrap;\\r\\n        -webkit-box-pack: center;\\r\\n            -ms-flex-pack: center;\\r\\n                justify-content: center;\\r\\n        -webkit-box-align: center;\\r\\n            -ms-flex-align: center;\\r\\n                align-items: center;\\r\\n    }\\r\\n\\r\\n    .gamer-card p {\\r\\n        width: 100vw;\\r\\n    }\\r\\n\\r\\n    .gamer-card * {\\r\\n        margin: 10px;\\r\\n    }\\r\\n\\r\\n    .gamer-card p {\\r\\n        max-width: 250px;\\r\\n    }\\r\\n\\r\\n    .gamer-card .profile-img {\\r\\n        width: 200px;\\r\\n        height: 200px;\\r\\n    }\\r\\n\\r\\n    .review-form {\\r\\n        width: 100vw;\\r\\n    }\\r\\n\\r\\n    .review-form textarea {\\r\\n        width: 80%;\\r\\n    }\\r\\n\\r\\n    .profile-container .game-grid{\\r\\n        margin: 5px;\\r\\n        width: 100vw;\\r\\n    }\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/profile/profile.component.css\n// module id = ./src/app/profile/profile.component.css\n// module chunks = main","module.exports = \"<div class=\\\"profile-container\\\">\\r\\n  <div class=\\\"profile-column\\\">\\r\\n    <div class=\\\"gamer-card theme\\\">\\r\\n      <img class=\\\"profile-img\\\" src=\\\"{{this.dataService.profilePics[profileData.profile.picture]}}\\\">\\r\\n      <div>\\r\\n      <h3>{{username}}</h3>\\r\\n      <h4 *ngIf=\\\"profileData.profile['display name']\\\">{{profileData.first}} {{profileData.last}}</h4>\\r\\n      <h4 *ngIf=\\\"profileData.profile['display email']\\\">{{profileData.email}}</h4>\\r\\n      <h4>{{profileData.city}}, {{profileData.state}}, {{profileData.country}}</h4>\\r\\n    </div>\\r\\n      <br>\\r\\n      <p>{{profileData.profile.bio}}</p>\\r\\n    </div>\\r\\n    <div class=\\\"gamer-card theme\\\">\\r\\n\\r\\n      <p>Leave a review:</p>\\r\\n      <form class=\\\"review-form\\\" *ngIf=\\\"this.dataService.currentUser\\\" [formGroup]=\\\"reviewForm\\\" (ngSubmit)=\\\"postReview(username, reviewForm.value)\\\">\\r\\n        <textarea name=\\\"reviewBody\\\" formControlName=\\\"reviewBody\\\" name=\\\"reviewBody\\\">\\r\\n    </textarea>\\r\\n        <input type=\\\"submit\\\" value=\\\"Submit\\\" [disabled]=\\\"!reviewForm.valid\\\">\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"profile-column\\\">\\r\\n    <h3>My Reviews:</h3>\\r\\n\\r\\n    <div *ngIf=\\\"profileData.profile.reviews.length > 0; else noReviews\\\" class=\\\"review-container\\\">\\r\\n      <div class=\\\"review-card\\\" *ngFor=\\\"let review of profileData.profile.reviews?.reverse()\\\">\\r\\n        <p>{{review.body}}</p>\\r\\n        <br>\\r\\n        <p>{{review.date | date:'fullDate'}}</p>\\r\\n        <p>Posted by:\\r\\n          <a [routerLink]=\\\"['/profile', review.reviewer]\\\">{{review.reviewer}}</a>\\r\\n        </p>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <ng-template #noReviews>\\r\\n      <p class=\\\"content-description\\\">There are no reviews for this user.</p>\\r\\n    </ng-template>\\r\\n\\r\\n    <br>\\r\\n\\r\\n    <h3>My Games:</h3>\\r\\n\\r\\n    <div *ngIf=\\\"profileData.games.length > 0; else noGames\\\" class=\\\"game-grid\\\">\\r\\n      <div *ngFor=\\\"let game of profileData.games\\\" class=\\\"game-card\\\">\\r\\n        <div class=\\\"game-card-img-container\\\">\\r\\n          <img src=\\\"{{game.cover}}\\\">\\r\\n        </div>\\r\\n        <div class=\\\"game-card-p-container\\\">\\r\\n          <p>{{game.title}}</p>\\r\\n          <p>{{game.platform}}</p>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"this.isAvailable(game); else gameUnavailable\\\">\\r\\n          <button *ngIf=\\\"!this.tradeService.alreadyRequested(game); else alreadyRequested\\\" (click)=\\\"this.tradeService.requestTrade(this.dataService.userData.username, game)\\\">Request Trade</button>\\r\\n          <ng-template #alreadyRequested>\\r\\n            <p class=\\\"game-card-status\\\">Request Pending</p>\\r\\n          </ng-template>\\r\\n        </div>\\r\\n        <ng-template #gameUnavailable>\\r\\n          <p class=\\\"game-card-status\\\">Unavailable</p>\\r\\n        </ng-template>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <ng-template #noGames>\\r\\n      <p class=\\\"content-description\\\">There are no games for this user.</p>\\r\\n    </ng-template>\\r\\n\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/profile/profile.component.html\n// module id = ./src/app/profile/profile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DataService } from '../data.service'\r\nimport { TradeService } from '../trade.service'\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  username: String;\r\n  profileData: Object;\r\n  private sub: any;\r\n  serverEndpoint = 'https://gametrader.herokuapp.com';\r\n  reviewForm: FormGroup;\r\n\r\n  constructor(private formBuilder: FormBuilder, \r\n    private tradeService: TradeService, \r\n    private dataService: DataService, \r\n    private route: ActivatedRoute, \r\n    private http: HttpClient) {\r\n    this.reviewForm = formBuilder.group({\r\n      'reviewBody': ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Get profile data for username in params\r\n    this.sub = this.route.params.subscribe(params => {\r\n      this.username = params.username;\r\n      let getProfileDataEndpoint = this.serverEndpoint + '/user/profile/' + this.username;\r\n      this.http.get(getProfileDataEndpoint).subscribe((res) => {\r\n        this.profileData = res;\r\n      });\r\n    });\r\n  }\r\n\r\n  // Returns true if the game that is passed in is not present in profileData active trades\r\n  isAvailable(game){\r\n    let checkId = game._id;\r\n\r\n    for (let i=0; i < this.profileData['active'].length; i++){\r\n      let gameId = this.profileData['active'][i].game._id;\r\n      let game2Id = this.profileData['active'][i].game2._id;\r\n\r\n      if(checkId === gameId || checkId === game2Id){\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  postReview(profile, formData) {\r\n    // Prep data for post request\r\n    let token = sessionStorage.getItem('currentUser');\r\n    let data = {\r\n      token: token,\r\n      formData: formData\r\n    }\r\n    data.formData.profile = profile;\r\n    // Post request\r\n    this.http.post(this.serverEndpoint + '/user/post_review', data).subscribe((res) => {\r\n      // Refresh\r\n      this.ngOnInit();\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/profile/profile.component.ts","module.exports = \"\\r\\n.registration-form-contents{\\r\\n    width: 100%;\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -ms-flex-wrap: wrap;\\r\\n        flex-wrap: wrap;\\r\\n    margin: 20px auto;\\r\\n}\\r\\n\\r\\n.registration-form-contents label {\\r\\n    width: 300px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/register/register.component.css\n// module id = ./src/app/register/register.component.css\n// module chunks = main","module.exports = \"<a id=\\\"logo-black\\\" routerLink=\\\"/\\\">GameTrader</a>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n<h1 class=\\\"component-title\\\">Sign Up</h1>\\r\\n  <form class=\\\"theme\\\" [formGroup]=\\\"registrationForm\\\" (ngSubmit)=\\\"this.dataService.register(registrationForm.value)\\\">\\r\\n\\r\\n    <div class=\\\"registration-form-contents\\\">\\r\\n    <label>First name:\\r\\n      <input type=\\\"text\\\" formControlName=\\\"first\\\" name=\\\"first\\\">\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"!registrationForm.controls['first'].valid && registrationForm.controls['first'].touched\\\">First name is required.</div>\\r\\n    </label>\\r\\n\\r\\n    <label>Last name:\\r\\n      <input type=\\\"text\\\" formControlName=\\\"last\\\" name=\\\"last\\\">\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"!registrationForm.controls['last'].valid && registrationForm.controls['last'].touched\\\">Last name is required.</div>\\r\\n    </label>\\r\\n\\r\\n    <label>Username:\\r\\n      <input type=\\\"text\\\" formControlName=\\\"username\\\" name=\\\"username\\\">\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"!registrationForm.controls['username'].valid && registrationForm.controls['username'].touched\\\">Username is required.</div>\\r\\n    </label>\\r\\n\\r\\n    <label>City:\\r\\n      <input type=\\\"text\\\" formControlName=\\\"city\\\" name=\\\"city\\\">\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"!registrationForm.controls['city'].valid && registrationForm.controls['city'].touched\\\">City is required.</div>\\r\\n    </label>\\r\\n\\r\\n    <label>State:\\r\\n      <input type=\\\"text\\\" formControlName=\\\"state\\\" name=\\\"state\\\">\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"!registrationForm.controls['state'].valid && registrationForm.controls['state'].touched\\\">State is required.</div>\\r\\n    </label>\\r\\n\\r\\n    <label>Country:\\r\\n      <input type=\\\"text\\\" formControlName=\\\"country\\\" name=\\\"country\\\">\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"!registrationForm.controls['country'].valid && registrationForm.controls['country'].touched\\\">Country is required.</div>\\r\\n    </label>\\r\\n\\r\\n    <label>Email Address:\\r\\n      <input type=\\\"email\\\" formControlName=\\\"email\\\" name=\\\"email\\\">\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"!registrationForm.controls['email'].valid && registrationForm.controls['email'].touched\\\">You must enter a valid email address.</div>\\r\\n    </label>\\r\\n\\r\\n    <label>Re-type Email Address:\\r\\n      <input type=\\\"email\\\" formControlName=\\\"email2\\\" name=\\\"email2\\\">\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"registrationForm.get('email2').hasError('required') && registrationForm.controls['email2'].touched\\\">You must re-type your email address.</div>\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"registrationForm.controls.email2.errors?.emailMismatch\\\">The email addresses you entered do not match.</div>\\r\\n    </label>\\r\\n\\r\\n    <label>Password: \\r\\n      <input type=\\\"password\\\" formControlName=\\\"password\\\" name=\\\"password\\\">\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"registrationForm.controls.password.errors?.required && registrationForm.controls['password'].touched\\\">Password is required.</div>\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"registrationForm.controls.password.errors?.noSpecialChar\\\">Your password must have at least one of the following special characters: !@#$%^&*</div>\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"registrationForm.controls.password.errors?.allUpperCase\\\">Your password must have at least one lowercase letter.</div>\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"registrationForm.controls.password.errors?.allLowercase\\\">Your password must have at least one uppercase letter.</div>\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"registrationForm.controls.password.errors?.noNumber\\\">Your password must have at least one number.</div>\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"registrationForm.controls.password.errors?.minlength\\\">Your password must be at least 8 characters.</div>\\r\\n    </label>\\r\\n\\r\\n    <label>Re-type Password:\\r\\n      <input type=\\\"password\\\" formControlName=\\\"password2\\\" name=\\\"password2\\\">\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"registrationForm.get('password2').hasError('required') && registrationForm.controls['password2'].touched\\\">You must re-type your password.</div>\\r\\n      <div class=\\\"form-alert\\\" *ngIf=\\\"registrationForm.controls.password2.errors?.passwordMismatch\\\">The passwords you entered do not match.</div>\\r\\n    </label>\\r\\n  </div>\\r\\n    <input type=\\\"submit\\\" value=\\\"Submit\\\" [disabled]=\\\"!registrationForm.valid\\\">\\r\\n  <div class=\\\"form-alert\\\" *ngIf=\\\"this.dataService.errorMsg\\\">{{ this.dataService.errorMsg }}</div>\\r\\n  </form>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/register/register.component.html\n// module id = ./src/app/register/register.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl, AbstractControl } from '@angular/forms';\r\nimport { DataService } from '../data.service';\r\nimport { passwordMatchValidator } from '../validators/passwordMatch.validator';\r\nimport { emailMatchValidator } from '../validators/emailMatch.validator';\r\nimport { passwordRequirementsValidator } from '../validators/passwordRequirements.validator';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  registrationForm: FormGroup;\r\n\r\n  constructor(private formBuilder: FormBuilder, private dataService: DataService) {\r\n    this.registrationForm = formBuilder.group({\r\n      'first': [null, Validators.required],\r\n      'last': [null, Validators.required],\r\n      'username': [null, Validators.compose([\r\n        Validators.required,\r\n      ])],\r\n      'city': [null, Validators.compose([\r\n        Validators.required\r\n      ])],\r\n      'state': [null, Validators.compose([\r\n        Validators.required\r\n      ])],\r\n      'country': [null, Validators.compose([\r\n        Validators.required\r\n      ])],\r\n      'email': [null, Validators.compose([\r\n        Validators.required,\r\n        Validators.email\r\n      ])],\r\n      'email2': [null, Validators.compose([\r\n        Validators.required\r\n      ])],\r\n      'password': [null, Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(8)\r\n      ])],\r\n      'password2': [null, Validators.compose([\r\n        Validators.required\r\n      ])]\r\n    }, { validator: [passwordMatchValidator, emailMatchValidator, passwordRequirementsValidator] });\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/register/register.component.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { DataService } from './data.service';\r\n\r\n@Injectable()\r\nexport class TradeService {\r\n\r\n  // URL endpoints for requests to server\r\n  serverEndpoint = 'https://gametrader.herokuapp.com';\r\n  requestTradeEndpoint = this.serverEndpoint + '/user/trade_request';\r\n  getTradeDataEndpoint = this.serverEndpoint + '/user/get_trade_data';\r\n  cancelTradeRequestEndpoint = this.serverEndpoint + '/user/cancel_trade_request';\r\n  denyTradeRequestEndpoint = this.serverEndpoint + '/user/deny_trade_request';\r\n  acceptTradeRequestEndpoint = this.serverEndpoint + '/user/accept_trade_request';\r\n  markReturnedEndpoint = this.serverEndpoint + '/user/mark_returned';\r\n\r\n  // Data storage.  Used in my-trades component\r\n  incoming = [];\r\n  outgoing = [];\r\n  active = [];\r\n  history = [];\r\n\r\n  constructor(private dataService: DataService, private http: HttpClient) { }\r\n\r\n  // Get the most updated trade data from the server for current user\r\n  getTradeData() {\r\n    let username = this.dataService.userData.username;\r\n    let params = new HttpParams().set('username', username);\r\n\r\n    this.http.get(this.getTradeDataEndpoint, { params: params }).subscribe((res) => {\r\n      this.incoming = res['incoming'];\r\n      this.outgoing = res['outgoing'];\r\n      this.active = res['active'];\r\n      this.history = res['history'];\r\n    });\r\n  }\r\n\r\n  // Initiate a trade request with another user\r\n  requestTrade(username, game) {\r\n    // Prep data for post request\r\n    let tradeData = {\r\n      initiator: username,\r\n      game: game\r\n    };\r\n    // Post request\r\n    this.http.post(this.requestTradeEndpoint, tradeData).subscribe((res) => {\r\n      this.getTradeData();\r\n    });\r\n  }\r\n\r\n  // Cancel an outgoing trade request\r\n  cancelTradeRequest(tradeRequest) {\r\n    this.http.post(this.cancelTradeRequestEndpoint, tradeRequest).subscribe((res) => {\r\n      this.getTradeData();\r\n    });\r\n  }\r\n\r\n  // Accept an incoming trade request\r\n  acceptTradeRequest(tradeRequest) {\r\n    this.http.post(this.acceptTradeRequestEndpoint, tradeRequest).subscribe((res) => {\r\n      this.getTradeData();\r\n    });\r\n  }\r\n\r\n  // Deny an incoming trade request\r\n  denyTradeRequest(tradeRequest) {\r\n    this.http.post(this.denyTradeRequestEndpoint, tradeRequest).subscribe((res) => {\r\n      this.getTradeData();\r\n    });\r\n  }\r\n\r\n  // Indicate that a game has been returned\r\n  markReturned(date, key) {\r\n    let username = this.dataService.userData.username;\r\n    let params = new HttpParams().set('username', username);\r\n\r\n    // Refresh data before marking this game as returned.\r\n    // This prevents the client from sending outdated data with post request.\r\n    this.http.get(this.getTradeDataEndpoint, { params: params }).subscribe((res) => {\r\n      this.incoming = res['incoming'];\r\n      this.outgoing = res['outgoing'];\r\n      this.active = res['active'];\r\n      this.history = res['history'];\r\n\r\n      // Find the index of this trade after refreshing trade data\r\n      let index;\r\n      for (let i = 0; i < this.active.length; i++) {\r\n        console.log(this.active[i].date);\r\n        console.log(date);\r\n        if (this.active[i].date === date) {\r\n          index = i;\r\n        }\r\n      }\r\n      // Prep data for post request\r\n      let data = {\r\n        trade: this.active[index],\r\n        key: key\r\n      }\r\n      // Post request\r\n      this.http.post(this.markReturnedEndpoint, data).subscribe((res) => {\r\n        this.getTradeData();\r\n      });\r\n    });\r\n  }\r\n\r\n  // Returns true if the game that is passed in exists in current user's incoming or outgoing requests.\r\n  alreadyRequested(game) {\r\n    let outgoingArr = this.outgoing;\r\n    for (let i = 0; i < outgoingArr.length; i++) {\r\n      if (JSON.stringify(outgoingArr[i].game) === JSON.stringify(game)) {\r\n        return true;\r\n      }\r\n    }\r\n    //Check incoming requests for game\r\n    let incomingArr = this.incoming;\r\n    for (let i = 0; i < incomingArr.length; i++) {\r\n      if (JSON.stringify(incomingArr[i].game2) === JSON.stringify(game)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/trade.service.ts","import { AbstractControl } from '@angular/forms';\r\n\r\n  export function emailMatchValidator(control: AbstractControl) {\r\n    return control.get('email').value === control.get('email2').value ? null : control.get('email2').setErrors({ 'emailMismatch': true });\r\n  }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/validators/emailMatch.validator.ts","import { AbstractControl } from '@angular/forms';\r\n\r\n  export function passwordMatchValidator(control: AbstractControl) {\r\n    return control.get('password').value === control.get('password2').value ? null : control.get('password2').setErrors({ 'passwordMismatch': true });\r\n  }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/validators/passwordMatch.validator.ts","import { AbstractControl } from '@angular/forms';\r\n\r\nexport function passwordRequirementsValidator (control: AbstractControl) {\r\n    // Passwords must include:\r\n    //at least 1 letter\r\n    //at least 1 number\r\n    //at least 1 special character: !@#$%^&*\r\n    let specialChars = ['!', '@', '#', '$', '%', '^', '&', '*'];\r\n    let numbers = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'];\r\n\r\n    if(control.get('password').value){\r\n    let password = control.get('password').value;\r\n\r\n    let hasSpecialChar = false;\r\n    for (let i = 0; i < specialChars.length; i++) {\r\n      if (password.includes(specialChars[i])) {\r\n        hasSpecialChar = true;\r\n      }\r\n    }\r\n\r\n    let hasNumber = false;\r\n    for (let i = 0; i < numbers.length; i++) {\r\n      if (password.includes(numbers[i])) {\r\n        hasNumber = true;\r\n      }\r\n    }\r\n\r\n    if (!hasSpecialChar) {\r\n      control.get('password').setErrors({ 'noSpecialChar': true });\r\n    } else if(!hasNumber) {\r\n      control.get('password').setErrors({ 'noNumber': true });\r\n    } else if (password === password.toUpperCase()) {\r\n      control.get('password').setErrors({ 'allUpperCase': true });\r\n    } else if (password === password.toLowerCase()) {\r\n      control.get('password').setErrors({ 'allLowercase': true });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/validators/passwordRequirements.validator.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}